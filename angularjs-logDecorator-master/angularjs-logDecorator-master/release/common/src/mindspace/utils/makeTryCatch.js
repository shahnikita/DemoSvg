// Generated by uRequire v0.6.14 - template: 'UMD' 
(function (window, global) {
  
var __isAMD = !!(typeof define === 'function' && define.amd),
    __isNode = (typeof exports === 'object'),
    __isWeb = !__isNode;

"use strict";
(function (factory) {
  if (typeof exports === 'object') {
    var nr = new (require('urequire').NodeRequirer) ('mindspace/utils/makeTryCatch', module, __dirname, '.');
    module.exports = factory(nr.require, exports, module);
} else if (typeof define === 'function' && define.amd) { define(factory) } else throw new Error('uRequire: Loading UMD module as <script>, without `build.noLoaderUMD`');
}).call(this, function (require, exports, module) {
  

angular.makeTryCatch = function (notifyFn, scope) {
    var reportError = function (reason) {
        if (notifyFn != null) {
          var error = reason && reason.stack ? reason : null, message = reason != null ? String(reason) : "";
          if (error != null) {
            message = error.message + "\n" + error.stack;
          }
          notifyFn.apply(scope, [message]);
        }
        return reason;
      }, tryCatch = function (actionFn, scope, args) {
        try {
          var result = angular.isFunction(actionFn) ? actionFn.apply(scope, args || []) : String(actionFn), promise = angular.isObject(result) && result.then ? result : null;
          if (promise != null) {
            promise.then(null, reportError);
          }
          actionFn = null;
          return result;
        } catch (e) {
          actionFn = null;
          throw reportError(e);
        }
      };
    return tryCatch;
  };
  return angular.makeTryCatch;


})
}).call(this, (typeof exports === 'object' ? global : window), (typeof exports === 'object' ? global : window))